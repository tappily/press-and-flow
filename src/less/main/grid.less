@import 'lib';
@import 'flow';
@import 'var';

.grid {
  .flow;
}

.grid-col-break() {
  .flow-writing-init();
  clear: @flow-start;
}

.grid-col {
  .flow-start;
  box-sizing: border-box;
  &:last-child {
    .flow-end;
  }
}

.grid-br {
  .grid-col-break();
}

.grid-col-br {
  .grid-br;
}

.loop-mix-in(@selector, @index, @from, @to) when (@selector = ' .grid') {

  &-span-@{index} {
    @nested-col-width: 100% / @to;
    width: @nested-col-width * @index;
  }

}

.loop-mix-in(@selector, @index, @from, @to) when (@selector = '.grid') {

  &-span-@{index} {
    @grid-col-width: 100% / @to;
    width: @grid-col-width * @index;

    .loop(1, (@index - @from + 1), ' .grid', '-', none);
  }

}

.loop(1, @grid-col-count, '.grid', '-', none);
